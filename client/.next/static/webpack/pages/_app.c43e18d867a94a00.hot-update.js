"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/lib/queryClient.ts":
/*!********************************!*\
  !*** ./src/lib/queryClient.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiRequest: function() { return /* binding */ apiRequest; },\n/* harmony export */   getQueryFn: function() { return /* binding */ getQueryFn; },\n/* harmony export */   queryClient: function() { return /* binding */ queryClient; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"./node_modules/@tanstack/react-query/build/modern/index.js\");\n\nasync function throwIfResNotOk(res) {\n    if (!res.ok) {\n        const text = await res.text() || res.statusText;\n        throw new Error(\"\".concat(res.status, \": \").concat(text));\n    }\n}\nasync function apiRequest(method, url, data) {\n    const headers = {};\n    // Add Content-Type header if we have data\n    if (data) {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    // Add Authorization header if we have a token\n    const token =  true ? localStorage.getItem(\"token\") : 0;\n    if (token) {\n        headers[\"Authorization\"] = \"Bearer \".concat(token);\n    }\n    const res = await fetch(url, {\n        method,\n        headers,\n        body: data ? JSON.stringify(data) : undefined,\n        credentials: \"include\"\n    });\n    await throwIfResNotOk(res);\n    return res;\n}\nconst getQueryFn = (param)=>{\n    let { on401: unauthorizedBehavior } = param;\n    return async (param)=>{\n        let { queryKey } = param;\n        const headers = {};\n        // Add Authorization header if we have a token\n        const token =  true ? localStorage.getItem(\"token\") : 0;\n        if (token) {\n            headers[\"Authorization\"] = \"Bearer \".concat(token);\n        }\n        const res = await fetch(queryKey.join(\"/\"), {\n            headers,\n            credentials: \"include\"\n        });\n        if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n            return null;\n        }\n        await throwIfResNotOk(res);\n        return await res.json();\n    };\n};\nconst queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.QueryClient({\n    defaultOptions: {\n        queries: {\n            queryFn: getQueryFn({\n                on401: \"throw\"\n            }),\n            refetchInterval: false,\n            refetchOnWindowFocus: false,\n            staleTime: Infinity,\n            retry: false\n        },\n        mutations: {\n            retry: false\n        }\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL3F1ZXJ5Q2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUU7QUFFbkUsZUFBZUMsZ0JBQWdCQyxHQUFhO0lBQzFDLElBQUksQ0FBQ0EsSUFBSUMsRUFBRSxFQUFFO1FBQ1gsTUFBTUMsT0FBTyxNQUFPRixJQUFJRSxJQUFJLE1BQU9GLElBQUlHLFVBQVU7UUFDakQsTUFBTSxJQUFJQyxNQUFNLEdBQWtCRixPQUFmRixJQUFJSyxNQUFNLEVBQUMsTUFBUyxPQUFMSDtJQUNwQztBQUNGO0FBRU8sZUFBZUksV0FDcEJDLE1BQWMsRUFDZEMsR0FBVyxFQUNYQyxJQUEwQjtJQUUxQixNQUFNQyxVQUFrQyxDQUFDO0lBRXpDLDBDQUEwQztJQUMxQyxJQUFJRCxNQUFNO1FBQ1JDLE9BQU8sQ0FBQyxlQUFlLEdBQUc7SUFDNUI7SUFFQSw4Q0FBOEM7SUFDOUMsTUFBTUMsUUFBUSxLQUFrQixHQUFjQyxhQUFhQyxPQUFPLENBQUMsV0FBVyxDQUFJO0lBQ2xGLElBQUlGLE9BQU87UUFDVEQsT0FBTyxDQUFDLGdCQUFnQixHQUFHLFVBQWdCLE9BQU5DO0lBQ3ZDO0lBRUEsTUFBTVgsTUFBTSxNQUFNYyxNQUFNTixLQUFLO1FBQzNCRDtRQUNBRztRQUNBSyxNQUFNTixPQUFPTyxLQUFLQyxTQUFTLENBQUNSLFFBQVFTO1FBQ3BDQyxhQUFhO0lBQ2Y7SUFFQSxNQUFNcEIsZ0JBQWdCQztJQUN0QixPQUFPQTtBQUNUO0FBR08sTUFBTW9CLGFBR1g7UUFBQyxFQUFFQyxPQUFPQyxvQkFBb0IsRUFBRTtXQUNoQztZQUFPLEVBQUVDLFFBQVEsRUFBRTtRQUNqQixNQUFNYixVQUFrQyxDQUFDO1FBRXpDLDhDQUE4QztRQUM5QyxNQUFNQyxRQUFRLEtBQWtCLEdBQWNDLGFBQWFDLE9BQU8sQ0FBQyxXQUFXLENBQUk7UUFDbEYsSUFBSUYsT0FBTztZQUNURCxPQUFPLENBQUMsZ0JBQWdCLEdBQUcsVUFBZ0IsT0FBTkM7UUFDdkM7UUFFQSxNQUFNWCxNQUFNLE1BQU1jLE1BQU1TLFNBQVNDLElBQUksQ0FBQyxNQUFnQjtZQUNwRGQ7WUFDQVMsYUFBYTtRQUNmO1FBRUEsSUFBSUcseUJBQXlCLGdCQUFnQnRCLElBQUlLLE1BQU0sS0FBSyxLQUFLO1lBQy9ELE9BQU87UUFDVDtRQUVBLE1BQU1OLGdCQUFnQkM7UUFDdEIsT0FBTyxNQUFNQSxJQUFJeUIsSUFBSTtJQUN2QjtFQUFFO0FBRUcsTUFBTUMsY0FBYyxJQUFJNUIsOERBQVdBLENBQUM7SUFDekM2QixnQkFBZ0I7UUFDZEMsU0FBUztZQUNQQyxTQUFTVCxXQUFXO2dCQUFFQyxPQUFPO1lBQVE7WUFDckNTLGlCQUFpQjtZQUNqQkMsc0JBQXNCO1lBQ3RCQyxXQUFXQztZQUNYQyxPQUFPO1FBQ1Q7UUFDQUMsV0FBVztZQUNURCxPQUFPO1FBQ1Q7SUFDRjtBQUNGLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9xdWVyeUNsaWVudC50cz81MWIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBRdWVyeUZ1bmN0aW9uIH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuXG5hc3luYyBmdW5jdGlvbiB0aHJvd0lmUmVzTm90T2socmVzOiBSZXNwb25zZSkge1xuICBpZiAoIXJlcy5vaykge1xuICAgIGNvbnN0IHRleHQgPSAoYXdhaXQgcmVzLnRleHQoKSkgfHwgcmVzLnN0YXR1c1RleHQ7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke3Jlcy5zdGF0dXN9OiAke3RleHR9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3QoXG4gIG1ldGhvZDogc3RyaW5nLFxuICB1cmw6IHN0cmluZyxcbiAgZGF0YT86IHVua25vd24gfCB1bmRlZmluZWQsXG4pOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIGNvbnN0IGhlYWRlcnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7fTtcbiAgXG4gIC8vIEFkZCBDb250ZW50LVR5cGUgaGVhZGVyIGlmIHdlIGhhdmUgZGF0YVxuICBpZiAoZGF0YSkge1xuICAgIGhlYWRlcnNbXCJDb250ZW50LVR5cGVcIl0gPSBcImFwcGxpY2F0aW9uL2pzb25cIjtcbiAgfVxuICBcbiAgLy8gQWRkIEF1dGhvcml6YXRpb24gaGVhZGVyIGlmIHdlIGhhdmUgYSB0b2tlblxuICBjb25zdCB0b2tlbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykgOiBudWxsO1xuICBpZiAodG9rZW4pIHtcbiAgICBoZWFkZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IGBCZWFyZXIgJHt0b2tlbn1gO1xuICB9XG5cbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgbWV0aG9kLFxuICAgIGhlYWRlcnMsXG4gICAgYm9keTogZGF0YSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogdW5kZWZpbmVkLFxuICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcbiAgfSk7XG5cbiAgYXdhaXQgdGhyb3dJZlJlc05vdE9rKHJlcyk7XG4gIHJldHVybiByZXM7XG59XG5cbnR5cGUgVW5hdXRob3JpemVkQmVoYXZpb3IgPSBcInJldHVybk51bGxcIiB8IFwidGhyb3dcIjtcbmV4cG9ydCBjb25zdCBnZXRRdWVyeUZuOiA8VD4ob3B0aW9uczoge1xuICBvbjQwMTogVW5hdXRob3JpemVkQmVoYXZpb3I7XG59KSA9PiBRdWVyeUZ1bmN0aW9uPFQ+ID1cbiAgKHsgb240MDE6IHVuYXV0aG9yaXplZEJlaGF2aW9yIH0pID0+XG4gIGFzeW5jICh7IHF1ZXJ5S2V5IH0pID0+IHtcbiAgICBjb25zdCBoZWFkZXJzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge307XG4gICAgXG4gICAgLy8gQWRkIEF1dGhvcml6YXRpb24gaGVhZGVyIGlmIHdlIGhhdmUgYSB0b2tlblxuICAgIGNvbnN0IHRva2VuID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSA6IG51bGw7XG4gICAgaWYgKHRva2VuKSB7XG4gICAgICBoZWFkZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IGBCZWFyZXIgJHt0b2tlbn1gO1xuICAgIH1cblxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHF1ZXJ5S2V5LmpvaW4oXCIvXCIpIGFzIHN0cmluZywge1xuICAgICAgaGVhZGVycyxcbiAgICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcbiAgICB9KTtcblxuICAgIGlmICh1bmF1dGhvcml6ZWRCZWhhdmlvciA9PT0gXCJyZXR1cm5OdWxsXCIgJiYgcmVzLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBhd2FpdCB0aHJvd0lmUmVzTm90T2socmVzKTtcbiAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgfTtcblxuZXhwb3J0IGNvbnN0IHF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KHtcbiAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICBxdWVyaWVzOiB7XG4gICAgICBxdWVyeUZuOiBnZXRRdWVyeUZuKHsgb240MDE6IFwidGhyb3dcIiB9KSxcbiAgICAgIHJlZmV0Y2hJbnRlcnZhbDogZmFsc2UsXG4gICAgICByZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UsXG4gICAgICBzdGFsZVRpbWU6IEluZmluaXR5LFxuICAgICAgcmV0cnk6IGZhbHNlLFxuICAgIH0sXG4gICAgbXV0YXRpb25zOiB7XG4gICAgICByZXRyeTogZmFsc2UsXG4gICAgfSxcbiAgfSxcbn0pO1xuIl0sIm5hbWVzIjpbIlF1ZXJ5Q2xpZW50IiwidGhyb3dJZlJlc05vdE9rIiwicmVzIiwib2siLCJ0ZXh0Iiwic3RhdHVzVGV4dCIsIkVycm9yIiwic3RhdHVzIiwiYXBpUmVxdWVzdCIsIm1ldGhvZCIsInVybCIsImRhdGEiLCJoZWFkZXJzIiwidG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZmV0Y2giLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInVuZGVmaW5lZCIsImNyZWRlbnRpYWxzIiwiZ2V0UXVlcnlGbiIsIm9uNDAxIiwidW5hdXRob3JpemVkQmVoYXZpb3IiLCJxdWVyeUtleSIsImpvaW4iLCJqc29uIiwicXVlcnlDbGllbnQiLCJkZWZhdWx0T3B0aW9ucyIsInF1ZXJpZXMiLCJxdWVyeUZuIiwicmVmZXRjaEludGVydmFsIiwicmVmZXRjaE9uV2luZG93Rm9jdXMiLCJzdGFsZVRpbWUiLCJJbmZpbml0eSIsInJldHJ5IiwibXV0YXRpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/queryClient.ts\n"));

/***/ })

});